"prelude.sk" import

:ary-oob { swap len â‰¥ } def

:_map_index' {
	0
	{ dup3 dup2 ary-oob { false } { dup3 dup2 get 0 get dup3 ne } if }
	{ 1+ } while
} def

:mset {
	a2b _map_index' swap b2a 2 implode
	dup3 dup3 ary-oob
	{ pop2 apush } { set } if
} def

:mget {
	_map_index'dup3 dup2 ary-oob

	{ pop "unknown\svariable\sname:\s" swap . die }
	{ pop2 get 1 get }
	if
} def


:env [ [ "KEY1" "VAL" ] [ "KEY2" "VAL2" ] ] defl

env "KEY2" mget dbq

env "KEY" "VALUE" mset
env "KEY2" "VALUE2" mset
env dbga pop
env "KEY2" "VALUE3" mset
env dbga pop
